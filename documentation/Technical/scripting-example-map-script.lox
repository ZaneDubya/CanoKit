// Twinion Map Index 0
// L1: Main Entrance
// Native objects: MapFn

#include "TwEquates.h"
#define CHORONZAR_KILLED_BIT 4

// === Map Variables =========================================================
// ===========================================================================

MapFn.MapIndex = 0;
MapFn.MapID = 0x0101;
MapFn.RndEncChance = 0;
MapFn.RndEncExtraCount = 0;
MapFn.TreasLevel = 0;
MapFn.TreasTabStandard = "Standard1";
MapFn.TreasTabExtra = "Extra1";

// === Map Event Functions ===================================================
// ===========================================================================

fun FnEvent001(player, context) {
    MapFn.ShowText(player, context, "This Gateway leads out of the Dungeon.");
    MapFn.ExitDungeon(player, context);
}
        
fun FnEvent002(player, context) {
    MapFn.ShowText(player, context, "The door is marked: 'To Gauntlet Gauche.'");
    MapFn.TeleportParty(player, context, 1, 2, 127, DirectionWest);
}
        
fun FnEvent003(player, context) {
    MapFn.ShowText(player, context, "Herein lies Gauntlet Droit.");
    MapFn.TeleportParty(player, context, 1, 3, 80, DirectionEast);
}
        
fun FnEvent004(player, context) {
    MapFn.ShowText(player, context, "To the first level of Her Majesty's proving grounds...The Queen's Aqueduct.");
    MapFn.TeleportParty(player, context, 2, 1, 248, DirectionNorth);
}
        
fun FnEvent005(player, context) {
    MapFn.ShowText(player, context, "Enter the Kingdom of the Night Elves... ");
    MapFn.ShowText(player, context, "               ....and beware.");
    MapFn.TeleportParty(player, context, 4, 1, 240, DirectionNorth);
}
        
fun FnEvent006(player, context) {
    MapFn.ShowText(player, context, "Here you enter the Dralkarians' Lair.");
    MapFn.TeleportParty(player, context, 8, 1, 112, DirectionEast);
}
        
fun FnEvent007(player, context) {
    if (MapFn.GetPartyLvl(player, 12) && (MapFn.GetPartyCount(player) == 1)) {
        if (MapFn.GetFlag(player, FlagTypeDungeon, DEEPPORTALS) == 1) {
            FindStr(player, context);
        }
        else if (MapFn.UsedItem(player, context, QUEENSKEY, QUEENSKEY)) {
            MapFn.ShowText(player, context, "As you unlock the door with Her Majesty's key, the lock on the door as well as the key vanish!");
            MapFn.ShowText(player, context, "Now the door will remain unlocked.");
            MapFn.SetFlag(player, FlagTypeDungeon, DEEPPORTALS, 1);
            MapFn.RemoveItem(player, QUEENSKEY);
            MapFn.RemoveItem(player, ROPE);
            FindStr(player, context);
        }
        else {
            MapFn.ShowText(player, context, "The Queen's key is needed to unlock this door.");
            MapFn.SetWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
        }
    }
    else {
        MapFn.ShowText(player, context, "Only more experienced heroes may venture beyond this gateway. And even then, you must enter alone!");
        MapFn.SetWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
    }
}

fun FindStr(player, context) {
    MapFn.ShowText(player, context, "Find your fate in the portal east of here.");
    MapFn.ClrWallBlock(player, MapFn.GetTile(player), DirectionEast);
}
        
fun FnEvent008(player, context) {
    if (MapFn.GetPartyLvl(player, 23)) {
        if (MapFn.GetPartyCount(player) == 1) {
            if (MapFn.GetFlag(player, FlagTypeDungeon, DRAKSPORT) == 1 || MapFn.GetFlag(player, FlagTypeDungeon, DRAKSPORT) == 2) {
                NorthStr(player, context);
            }
            else if ((MapFn.GetFlag(player, FlagTypeDungeon, DRAKSPORT) == 0) && MapFn.HasItem(player, WHOLEMAP)) {
                MapFn.ShowText(player, context, "Your map begins to glow with an eerie green light. The light then fades to red followed by blue and finally brilliant yellow.");
                MapFn.ShowText(player, context, "The magical light of this most curious map dispels the door's magic!");
                MapFn.ShowText(player, context, "The map, drained of its powers, crumbles into the nothingness from which it came.");
                MapFn.SetFlag(player, FlagTypeDungeon, DRAKSPORT, 1);
                MapFn.RemoveItem(player, WHOLEMAP);
                NorthStr(player, context);
            }
            else {
                GenericStr(player, context);
            }
        }
        else {
            MapFn.ShowText(player, context, "You must journey northward alone!");
            MapFn.SetWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
        }
    }
    else {
        GenericStr(player, context);
    }
}

fun GenericStr(player, context) {
    MapFn.ShowText(player, context, "Destiny awaits. It will be here for you when you are ready.");
    MapFn.SetWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
}

fun NorthStr(player, context) {
    MapFn.ShowText(player, context, "Northward lies the passage of Fate.");
    MapFn.ClrWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
    MapFn.SetWallItem(player, DOOR, MapFn.GetTile(player), MapFn.GetFacing(player));
}
        
fun FnEvent009(player, context) {
    if (MapFn.HasItem(player, JESTERSCAP) && (MapFn.GetFlag(player, FlagTypeDungeon, CHOR_NPC_KILLED) & CHORONZAR_KILLED_BIT) == 0) {
        MapFn.ShowText(player, context, "A maniacal fiend appears, removes an item you stole from him, and kills you outright.");
        while (MapFn.HasItem(player, JESTERSCAP))
            MapFn.RemoveItem(player, JESTERSCAP);
        MapFn.ModifyGold(player, -10000);
        MapFn.DoDamage(player, GetHealthMax(player));
    }
}
        
fun FnEvent010(player, context) {
    MapFn.ClrWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
    MapFn.ShowText(player, context, "Welcome, brave Champions. To the west lies Gauntlet Gauche: one of the two maps that interweave a simple quest.");
    MapFn.ShowText(player, context, "Eastward lies Gauntlet Droit. There you will find challenges and helpful friends to start you on your way.");
    MapFn.ShowText(player, context, "These two maps comprise the Gauntlet... A simple quest that you'd be wise to undertake before all else.");
}
        
fun FnEvent011(player, context) {
    MapFn.ClrWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
    MapFn.ShowText(player, context, "Northward is the entrance to the Queen's Proving Grounds. You begin there in Her Majesty's Aqueduct.");
    MapFn.ShowText(player, context, "That will start your ascent to greater challenges. Fare well wherever you fare.");
}
        
fun FnEvent012(player, context) {
    MapFn.DisablePartyJoining(player);
}
        
fun FnEvent013(player, context) {
    MapFn.DisableSpells(player);
    if (MapFn.GetPartyLvl(player, 23)) {
        if (MapFn.GetFlag(player, FlagTypeDungeon, DRAKSPORT) == 1) {
            MapFn.ShowPortrait(player, QUEENAEOWYN);
            MapFn.ShowText(player, context, "The Queen is here:");
            MapFn.ShowText(player, context, "'Loyal Champions! A magnificent achievement!");
            MapFn.ShowText(player, context, "Now, as to the markings here at this secret entrance...");
            MapFn.ShowText(player, context, "This will take you into the lowest depths!");
            MapFn.ShowText(player, context, "Together, we will breach the gates of time and march into a new world of wonders! But only together.");
            MapFn.ShowText(player, context, "Each of the vile deities whom the Night Elves worship wears a magical ring. You must get each ring from its owner!");
            MapFn.ShowText(player, context, "Together, the rings are the keys that will allow us to enter the Portal of Time. And then, loyal Champions, I know not where we shall step through into Immortality.");
            MapFn.ShowText(player, context, "Go, now! I shall be with thee! I will come to thee when I can. Fare thee well!'");
            MapFn.SetFlag(player, FlagTypeDungeon, DRAKSPORT, 2);
        }
        else if (MapFn.GetFlag(player, FlagTypeDungeon, FINISHEDGAME) == 0) {
            MapFn.ShowText(player, context, "Let us not dally... northward, onward to destiny.");
        }
    }
    else {
        MapFn.ShowText(player, context, "Your experience is not suited for the horrors through here. Seek thee more knowledge then return.");
        MapFn.TeleportParty(player, context, 1, 1, 206, DirectionSouth);
    }
}
        
fun FnEvent014(player, context) {
    MapFn.DisableAutomaps(player);
}
        
fun FnEvent015(player, context) {
    MapFn.DisablePartyJoining(player);
    if (MapFn.GetFlag(player, FlagTypeDungeon, DEEPPORTALS) == 0) {
        MapFn.ShowText(player, context, "Only more experienced heroes may venture beyond this gateway. And even then, you must have completed the Queen's proving grounds and acquired Her key!");
        MapFn.TeleportParty(player, context, 1, 1, 200, DirectionEast);
    }
}
        
fun FnEvent017(player, context) {
    MapFn.TeleportParty(player, context, 1, 1, 88, DirectionNorth);
}
        
fun FnEvent018(player, context) {
    if ((MapFn.GetPartyCount(player) == 1) && MapFn.GetPartyLvl(player, 35)) {
        if ((MapFn.GetFlag(player, FlagTypeDungeon, ENDGAMETELE) == 1) || (MapFn.GetFlag(player, FlagTypeDungeon, ENDGAMETELE) == 2)) {
            MapFn.SetWallItem(player, DOOR, MapFn.GetTile(player), MapFn.GetFacing(player));
            MapFn.ShowText(player, context, "A mystic portal appears, granting you an ingress to the chambers of time.");
            MapFn.ClrWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
        }
        else {
            MapFn.ClrWallItem(player, MapFn.GetTile(player), MapFn.GetFacing(player));
            MapFn.SetWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
        }
    }
    else {
        MapFn.ClrWallItem(player, MapFn.GetTile(player), MapFn.GetFacing(player));
        MapFn.SetWallBlock(player, MapFn.GetTile(player), MapFn.GetFacing(player));
    }
}
        
fun FnEvent019(player, context) {
    if (MapFn.GetPartyCount(player) == 1) {
        if ((MapFn.GetFlag(player, FlagTypeDungeon, ENDGAMETELE) == 1) || (MapFn.GetFlag(player, FlagTypeDungeon, ENDGAMETELE) == 2)) {
            MapFn.ShowText(player, context, "Go from here to the depths of time! Enter into the deepest wells of your destiny! This will take you to the start of Dissemination.");
            MapFn.TeleportParty(player, context, 12, 1, 255, DirectionWest);
        }
    }
    else {
        MapFn.ShowText(player, context, "You must enter alone!");
        MapFn.TeleportParty(player, context, 1, 1, 19, DirectionNorth);
    }
}
        
fun FnEvent020(player, context) {
    if (MapFn.GetPartyCount(player) == 1) {
        if (MapFn.IsFlagOn(player, FlagTypeDungeon, TOTHEQUEEN)) {
            MapFn.ShowText(player, context, "A portal forms in the wall before you! Iridescent light filters into the room, surrounding you with a vapor of magic.");
            MapFn.ShowText(player, context, "THIS portal will take you into the final challenge...your Fate is at hand.");
            MapFn.TeleportParty(player, context, 12, 2, 255, DirectionWest);
        }
    }
    else {
        MapFn.ShowText(player, context, "In time, this ingress shall grant you passage; but only alone and after you've earned the right, may you proceed.");
        MapFn.TeleportParty(player, context, 1, 1, 19, DirectionNorth);
    }
}
